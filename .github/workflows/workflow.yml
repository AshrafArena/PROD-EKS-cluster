name: Deploy to EKS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: eu-west-2
      KUBECONFIG: ${{ github.workspace }}/kubeconfig

    steps:
      
      - name: Checkout repository
        uses: actions/checkout@v3

      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Install Checkov
        run: pip install checkov

      - name: Run Checkov Scan
        working-directory: ./terraform
        run: checkov -d .

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure kubeconfig
        run: |
          aws eks update-kubeconfig --name your-eks-cluster-name --region $AWS_REGION

      # Step 8: Install Helm
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0

      # Step 9: Deploy cert-manager
      - name: Deploy cert-manager with Helm
        run: |
          helm repo add jetstack https://charts.jetstack.io
          helm repo update
          helm install cert-manager jetstack/cert-manager \
            --namespace cert-manager --create-namespace \
            --version v1.16.1 --set installCRDs=true
          
          kubectl apply -f ./cert-manager/cluster-issuer.yaml

      # Step 10: Deploy NGINX Ingress Controller
      - name: Deploy NGINX Ingress Controller
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update
          helm upgrade --install nginx-ingress ingress-nginx/ingress-nginx \
            --namespace ingress-nginx --create-namespace \
            --values ./nginx-ingress/values.yaml

      # Step 11: Deploy ExternalDNS
      - name: Deploy ExternalDNS
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo update
          helm upgrade --install external-dns bitnami/external-dns \
            --namespace external-dns --create-namespace \
            --values ./external-dns/external-dns-values.yaml

      # Step 12: Deploy Your Application
      - name: Deploy Application with Helm
        run: |
          helm upgrade --install threat-composer ./helm/app \
            --namespace app-namespace --create-namespace \
            --values ./helm/app/values.yaml

      # Step 13: Verify Deployment
      - name: Verify Pods Status
        run: kubectl get pods -n app-namespace

      # Optional: Clean Up Terraform (if needed)
      - name: Terraform Destroy
        if: ${{ github.event_name == 'pull_request' }}
        working-directory: ./terraform
        run: terraform destroy -auto-approve
